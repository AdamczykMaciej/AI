package sort;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Comparator;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.stream.Collectors;

public class Sort {
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new FileReader("D:\\PJATK Informatyka\\2 rok\\NAI\\sort\\input"));

		Map<String, Double> products = new HashMap<String, Double>();
		String curline = "";
		br.readLine();
		while ((curline = br.readLine()) != null) {
			curline = curline.replaceAll("\\t+", " ");
			curline = curline.replaceAll(",", ".");
			System.out.println(curline);
			String[] ar = curline.split(" ");
			products.put(ar[0], Double.parseDouble(ar[1]));
		}

		products = products.entrySet().stream() // Java8 approach, sorting values								
				.sorted(Map.Entry.comparingByValue(Comparator.naturalOrder())).collect(Collectors.toMap(
						Map.Entry::getKey, Map.Entry::getValue, (oldValue, newValue) -> oldValue, LinkedHashMap::new)); 
		File file = new File("D:\\PJATK Informatyka\\2 rok\\NAI\\sort\\output.txt");
		PrintWriter pw = new PrintWriter(file);

		for (Map.Entry<String, Double> entry : products.entrySet()) {
			pw.println(entry.getValue());
		}
	}

}
